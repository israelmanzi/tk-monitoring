logging {
	level = "debug"

	write_to = [loki.relabel.alloy_logs.receiver]
}

faro.receiver "default" {
	output {
		logs = [loki.write.loki.receiver]
		traces = [otelcol.exporter.otlp.tempo.input]
	}
}

loki.relabel "alloy_logs"{
	rule {
		target_label = "instance"
		replacement = constants.hostname
	}

	rule {
		target_label = "job"
		replacement = "integrations/self"
	}

	forward_to = [loki.write.loki.receiver]
}

tracing {
	sampling_fraction = 1.0

	write_to = [otelcol.exporter.otlp.tempo.input]
}

prometheus.exporter.self "alloy" {}
prometheus.scrape "alloy" {
	targets    = prometheus.exporter.self.alloy.targets
	forward_to = [prometheus.remote_write.mimir.receiver]
}

pyroscope.scrape "default" {
  targets = [
    {"__address__" = "localhost:12345", "service_name" = "alloy"},
  ]
  forward_to = [pyroscope.write.pyroscope.receiver]
}

prometheus.remote_write "mimir" {
	endpoint {
		url = string.format(
			"http://%s/api/v1/push",
			coalesce(sys.env("REMOTE_WRITE_HOST"), "10.110.27.214:9009"),
		)
	}
}

loki.write "loki" {
	endpoint {
		url = string.format(
			"http://%s/loki/api/v1/push",
			coalesce(sys.env("LOKI_HOST"), "10.110.27.214:3100"),
		)
	}
}

otelcol.exporter.otlp "tempo" {
	client {
		endpoint = coalesce(sys.env("TEMPO_HOST"), "10.110.27.214:4317")

		tls {
			insecure = true
		}
	}
}

pyroscope.write "pyroscope" {
	endpoint {
		url = string.format(
			"http://%s",
			coalesce(sys.env("PYROSCOPE_HOST"), "10.110.27.214:4040"),
		)
	}
}
